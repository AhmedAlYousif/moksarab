name: Build and Release

on:
  push:
    tags: ["v*"]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
      - name: Run tests
        run: go test ./...

  build-and-release:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      - name: Set version
        id: set_version
        run: |
          VERSION="${{ github.ref_name }}"
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION="${{ github.ref_name }}"
          elif [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="dev"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install mingw-w64 for Windows cgo
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build binaries
        run: |
          mkdir -p dist
          for GOOS in linux windows; do
            for GOARCH in amd64 arm64; do
              EXT=""
              [ "$GOOS" = "windows" ] && EXT=".exe"
              ARCH="$GOARCH"
              [ "$GOARCH" = "amd64" ] && ARCH="x86_64"
              OS="$GOOS"
              [ "$GOOS" = "darwin" ] && OS="macos"
              OUT="dist/moksarab-${OS}-${ARCH}_v${VERSION}${EXT}"
              if [ "$GOOS" = "windows" ]; then
                CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-X 'main.Version=${VERSION}'" -o $OUT
              else
                GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-X 'main.Version=${VERSION}'" -o $OUT
              fi
            done
          done
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
